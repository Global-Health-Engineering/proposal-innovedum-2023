---
title: "Untitled"
format: html
---
# Evaluation criteria (boxes to tick)

- [ ] Innovation for teaching and learning at ETH beyond the normal ongoing course development process
- [ ] Structured didactic and conceptual project design
- [ ] Inclusion of the student perspective in the project design and the planned project implementation
- [ ] Ensure the flexible usability and accessibility of the new learning media and materials (e-accessibility)
- [ ] Prospect of success based on successful delivery of the project plan (realistic implementation plan: clear and convincing project goals and project plan, necessary resources are available)
- [ ] Sustainability / continued use of the project results beyond the end of the project (possibility follow-up projects)
- [ ] Transferability and possible dissemination of the educational innovation to a wider audience (e.g. other universities, course or departments)
- [ ] Project communication: Project insights will be made accessible to interested ETH lecturers.
- [ ] Coherent evaluation plan
- [ ] If applicable: Plan for managing personal data
- [ ] Appropriateness of the planned costs (such as the expected efforts, expect results in relation to the number of students affected)
- [ ] Only Focus topics: Project investigates aspects of a specific focus topi
- [ ] Funding for summer or winter schools is only possible if new teaching concepts are tested within them. Furthermore, repeated implementation and sustainability of the concepts must be guaranteed

# Blog: 10 things to consider when applying for an Innovedum project

- Identify the correct grant scheme
- State your idea clearly
- Give us your context
- Feature the voice of learners
- Demonstrate that you talked to educators and didactic experts
- Present a realistic project plan
- Assume supportive reviewers
- Put your didactic innovations front and center
- Think beyond your project
- Share your learnings

https://blogs.ethz.ch/letblog/2021/09/03/10-things-to-consider-when-applying-for-an-innovedum-project/


# Focus on Exploring AI in Academic Writing: Two innovative Innovedum projects

Two AI project examples recently funded through Innovedum.

https://blogs.ethz.ch/letblog/2023/09/18/focus-on-exploring-ai-in-academic-writing-two-innovative-innovedum-projects/

# Project Application Innovedum

- Proposalnumber: 
- Project type: Focal Point Project
- Focus topic: AI in Teaching and Learning
- Start date: 2024-01-01
- End date: 2025-06-30
- Extended: 
- Type of proposal

# Project title

- English: 
- German: 

# Institute

- Institute:
- Department:
- Postal address

# Applicants

- Main applicant:
- Project manager:
- Project partner:

# 1. Project summary

## 1.1. Describe the project in 1-2 sentences (max. 400 characters; 57 to 90 words; will be published in the project database)

## 1.2. Project summary (ca. 200 words; will be published in the project database).

# 2. Consultation

## 2.1. Student involvement: Describe whether and how students were involved in the preparation and review of this project application. How will students be involved in project implementation?

## 2.2. Who advised you on your project and/or who gave you feedback on it (e.g. LET / Educational Developer(s) / department(s) / other faculty / other)?

# 3. Project description

## 3.1. Starting position: Describe the current situation. What didactic and disciplinary challenges does your project address? (max 250 words). Info: Show the relevance of and the need leading to the project. List (if applicable) preliminary work to remedy the situtation.

For the first time in FS22, we taught a course that teaches engineers how to conduct a research project out of the lab, and apply open science principles and effective research data management to their data analysis lifecycle/workflows. As a foundation, the course introduces students to research design with a focus observational, descriptive studies (i.e. surveys). Students learn differences between qualitative and quantitative research methods, and are taught how to design surveys with (structured) questions.

Students then develop their own research questions for a given topic in Zurich city (e.g. waste management), design a survey and collect their own data.  

In parallel, we teach students the R statistical programming language, assuming no prior knowledge. Students further learn how to use git version control and GitHub for collaboration, task management, and research data management. All exercises are performed in Quarto documents which support literate programming and build the foundation for understand computational reproducibility. 

Students use their own collected data and prepare a complete resarch project report as an output. In addition, students write 2-hour programming exam for which they can use any material they want, including the internet. 

This project addresses several didactic and disciplinary opportunities & challenges for students & teachers, which arise with the availability of Large Language Models (LLMs) and tools such as ChatGPT, Perplexity, GitHub Copilot (among others). 

One particular challenge is the ease with which students can auto-generate solutions to programming assessments [[@denny2023computing]]. This project will address this by making it mandatory for students to use AI for the class. A specific 3-hour module will entirely focus on introducing LLMs and prompting AI for different use cases with a focus on prompt engineering. A usage policy will be defined, which makes students aware of the limitations of LLMs, but also requires students to share links to their prompts and reflect on the usage of AI for each assessment. 

A great opportunity for teaching novice programmers is the ease at which AI tools provide code examples for specific promblem statements. One of the greatest challenges for students as they are introduced to a new programming language is how to find help online using search engines. This is due to the nature how search engine results are curated (i.e. search optimisation), but also due to the nature of open source programming language which advance quickly and can provide dozens of different examples for solving a problem. This is mostly due to the fact that novices do not know what they are looking for which results in frustration and demotivation to continue learning. With the possbility to share such a discussion with a LLM via a link, a more individualized approach is available, helping teachers to better understand issues novice programmers are facing [[@kiesler2023large]].

Lastly, from the lecturer's perspective, AI can be utilized to create low-stakes tests and formative assessments, enhancing retrieval practice and improving student learning. Additionally, AI can provide explanations, examples, and analogies to support students in class, further enriching the learning experience @mollick2023assigning.

In addition to all the potential support that AI can provide for students and teachers in teaching programming, there the opportunity to help students develop novel research questions. They can further design surveys and come up with a set of appropriate question types and response categories (e.g. single choice categorical questions, likert scale questions).


- Resesarch Questions
    - How does a Large Languâ€ age Model like ChatGPT perform when asked to solve introductory programming tasks?
    - To address this research question, all of Swirls tasks from R code practice areas were used as input to Perplexity (freely available), and GPT-4 (pay model) as the most recent versions of Perplexity LLM.



### Outline

1. Introduction
    - The current state of introductory programming education
    - Challenges faced by students and lecturers
    - The potential of Large Language Models (LLMs) in addressing these challenges[1]
2. AI as a Tutor for Students
    - Using AI prompts for learning programming concepts
    - Leveraging AI tools like CodeTutor and GitHub Copilot for better code examples[2][6]
    - Overcoming the struggle of finding help online with AI assistance
3. AI as a Tool for Lecturers
    - Utilizing AI for creating low-stakes tests and formative assessments[4]
    - Enhancing retrieval practice with AI-generated assessments
    - Providing explanations, examples, and analogies using AI to support students in class[8]
4. Conclusion
    - The potential impact of AI integration in programming education
    - Future directions and research in AI-assisted programming education
    
## 3.2. Project goals: List the concrete project goals. (250 words). Info: 3 to 5 clear measurable objectives. Please fill the fields in German and English. The information will be published in Innovedum Public. 

**Didactic challenge 1:** Helping students navigate the overwhelming amount of information available online and
receive solutions to their individual problems.

**Goal 1:** Use LLMs to provide code examples and support novices find answers to programming tasks.

**Activity 1:** Create a collection of 60 problem statements (20 for each level of complexity: low, medium, high) for R programming tasks, along with their respective AI prompts

**Activity 1.2:** Conduct a student satisfaction survey to evaluate student satisfaction and user experience of receiving AI-generated code examples. 

**Objective 1.1:** Ensure that 90% of the 60 AI-generated code examples and solutions are accurate, relevant, and helpful for novice programmers.

**Objective 1.2:** ...


**Activities:**

- 

**Goal 2:** Use LLMs to create low-stakes tests for formative assessments (faded examples, Parsons problems). Didactic challenge: Enhancing retrieval practice, improving student learning, and enriching the overall learning experience.

**Goal 3:** Integrate Large Language Models (LLMs) into lectures and require it as a mandatory tool to use in class. 

**Didactic Challenge:** Ensuring that students use AI responsibly and effectively, while still developing their own problem-solving and programming skills.

**Goal 4:** Develop a programming exam format that allows students to use LLMs. 

**Didactic Challenge**: Applying the knowledge and skills gained throughout the course to analyze data, draw conclusions, and demonstrate programming proficiency in a time-limited exam setting. 

### Unsure if I should add it

**Goal 5**: Develop research questions for a given topic in Zurich city (e.g., waste management) and design a survey to collect data.

**Didactic Challenge**: Learning how to formulate relevant and impactful research questions, and designing effective surveys with appropriate question types and response categories.


## 3.3. Project progression: Describe the progression of the project (300 words)



## 3.4. Timetable and milestones

## 3.5. Teaching/Learning concept: Explain the didactic principles (e.g. experiences, theories and methods) which underpin your project. (300 words)

The project idea of using AI to help students with coding problems in R is based on the premise that novices in programming struggle to find help online, and AI tools can provide better code examples if students are taught how to use the relevant prompts. This idea is underpinned by several didactic principles, experiences, theories, and methods.

1. **Co-creation and collaboration**: The concept of co-creation in AI-assisted learning involves students working together with AI tools to solve problems and learn new concepts. This approach has been explored in studies such as the one on AI-generated programming code in higher education [3]. The study found that the use of AI tools can serve as a resource for understanding and learning while also affecting creative processes.

2. **Learning by doing**: AI tools can provide students with hands-on experiences and opportunities to learn by doing. This approach aligns with constructivist learning theories, which emphasize the importance of active engagement and problem-solving in the learning process [2].

3. **Personalized learning**: AI tools can offer personalized learning experiences by adapting to individual students' needs, preferences, and learning styles. This approach is supported by the idea that learners have different ways of processing information and that tailored instruction can lead to better learning outcomes[5].

4. **Scaffolding**: AI tools can provide scaffolding to support students in their learning process. Scaffolding refers to the temporary support provided to learners to help them achieve a higher level of understanding or skill. As students become more proficient, the support can be gradually removed[9].

For further reading and resources, you can refer to the following:

- The AI-Atlas: Didactics for Teaching AI and Machine Learning On-Site, Online, and Hybrid[1]
- Learning theories for artificial intelligence promoting learning[2]
- Cracking the code: Co-coding with AI in creative programming education[3]
- Artificial intelligence in education - UNESCO[5]
- Artificial Intelligence and the Future of Teaching and Learning[6]

These resources provide insights into the didactic principles, theories, and methods that underpin the project idea of using AI to assist students with coding problems in R.

## 3.6. Target group(s)

## 3.7. Effects of the project: Describe the innovative aspects of your project and describe its expected effects and added value for teaching and learning at ETH for all of the following: (250 words)

- Students
- Faculty
- The entire degree programme

## 3.8. Evaluation strategy: Describe the evaluation strategy you will use to check achievement of project goals (see 3.2) and effects on teaching (see 3.7). (250 words)

- What approaches will you use?
- Are you planning measures for identifying interim results? If so, how will these results flow back into the project?

## 3.9. Project staff: Employees or students involved in the project and their roles

# 4.Sustainability and dissemination

## 4.1.Sustainability: How will project results be maintained and utilised after the funding period? What project results can prospectively be utilised within ETH? Do you need additional funding for this? (300 words)

## 4.2. Project communication: How do you plan to publicise and document the progress of the project? What form will the final report for the Innovedum project database take? How will you disseminate project results? (300 words)

# 5. Data gathering and administration

## 5.1.Will the project involve the gathering of personal data?

If yes,

- How will you obtain permission to collect data?
- If you gather data, where will it be store

## 5.2  Accessibility and e-Accessibility: How do you ensure the flexible usability and accessibility of the learning media and materials created in the project? (max ca. 300 words) 



# 6. Funding

## 6.1 Personnel funds

## 6.2 Consumables

## 6.3. Innovedum funds per student (kFr)

## 6.4. Innovedum funds applied for (kFr)


# Prompts

https://www.perplexity.ai/search/9cef7861-b62c-422b-9bac-3c2125ac67b1?s=c

```{r}
# Initialize the counter
counter <- 0

# Generate the first random number
random_number <- sample(0:100, 1)

# Keep generating random numbers until 25, 50, or 75 is generated
while (!(random_number %in% c(25, 50, 75))) {
  random_number <- sample(0:100, 1)
  counter <- counter + 1
}

# Display the number of attempts and the number it stopped on
cat("It took", counter, "attempts to generate the number", random_number, ".\n")

```

```{r}

donut_cost <- function(price, num_donuts, is_weekend) {
  if (is_weekend) {
    total_cost <- price * num_donuts * 2
  } else {
    total_cost <- price * num_donuts
  }
  return(total_cost)
}

library(testthat)

test_that("donut_cost calculates the correct cost", {
  expect_equal(donut_cost(1, 5, FALSE), 5)
  expect_equal(donut_cost(2, 3, FALSE), 6)
  expect_equal(donut_cost(1, 5, TRUE), 10)
  expect_equal(donut_cost(2, 3, TRUE), 12)
})

```

